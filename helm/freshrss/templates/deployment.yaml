apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.app.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      initContainers:
        - name: init-chown
          image: busybox:1.36
          command:
            ["sh", "-c", "chown -R {{ .Values.app.uid }}:{{ .Values.app.gid }} /data && chown -R {{ .Values.app.uid }}:{{ .Values.app.gid }} /extensions"]
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /data
            - name: {{ .Release.Name }}-extensions
              mountPath: /extensions
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.service.port }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secret
            - configMapRef:
                name: {{ .Release.Name }}-env
          resources:
          {{- toYaml ( .Values.app.resources | default dict ) | nindent 12 }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /api/fever.php
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /api/fever.php
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          securityContext:
            runAsUser: {{ .Values.app.uid }}
            runAsGroup: {{ .Values.app.gid }}
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /var/www/FreshRSS/data
            - name: {{ .Release.Name }}-extensions
              mountPath: /var/www/FreshRSS/extensions
            - name: cluster-ca
              mountPath: /tmp/cluster-ca.crt
              subPath: cluster-ca.crt
      volumes:
        - name: {{ .Release.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
        - name: {{ .Release.Name }}-extensions
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-extensions
        - name: cluster-ca
          secret:
            secretName: cluster-ca
            items:
              - key: Cluster_CA.pem
                path: cluster-ca.crt
