apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.app.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      containers:
        - name: "{{ .Release.Name }}"
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-env"
            - secretRef:
                name: "{{ .Release.Name }}-secret"
          resources:
          {{- toYaml ( .Values.app.resources | default dict ) | nindent 12 }}
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /liveness
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /readiness
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            runAsUser: {{ .Values.app.uid }}
            runAsGroup: {{ .Values.app.gid }}
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: "certs"
              mountPath: "/etc/cert"
              readOnly: true
      volumes:
        - name: "certs"
          secret:
            secretName: "{{ .Release.Name }}-server-cert"