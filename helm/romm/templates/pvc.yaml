apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Release.Name }}-games"
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: "{{ .Release.Name }}-games"
  storageClassName: ""
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Release.Name }}-assets"
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage.assets.size }}
{{- if .Values.storage.assets.existingPvcName }}
  volumeName: "{{ .Values.storage.assets.existingPvcName }}"
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-resources
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage.resources.size }}
{{- if .Values.storage.resources.existingPvcName }}
  volumeName: "{{ .Values.storage.resources.existingPvcName }}"
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-config
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage.config.size }}
{{- if .Values.storage.config.existingPvcName }}
  volumeName: "{{ .Values.storage.config.existingPvcName }}"
{{- end }}