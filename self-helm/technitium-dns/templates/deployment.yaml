apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.app.replicaCount | default 1 }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName | default .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: frontend
    spec:
      initContainers:
        - name: init-chown
          image: busybox:1.36
          command: ["sh", "-c", "chown -R {{ .Values.app.uid }}:{{ .Values.app.gid }} /data"]
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /data
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
            - secretRef:
                name: {{ .Release.Name }}-secret
          resources:
          {{- toYaml .Values.app.resources | nindent 12 }}
          livenessProbe:
            exec:
              command: ["sh", "-c", "dig +short +retry=0 +norecurse @127.0.0.1 localhost | grep 127.0.0.1"]
            initialDelaySeconds: 5
            periodSeconds: 20
          readinessProbe:
            exec:
              command: ["sh", "-c", "dig +short +retry=0 +norecurse @127.0.0.1 localhost | grep 127.0.0.1"]
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            runAsUser: {{ .Values.app.uid }}
            runAsGroup: {{ .Values.app.gid }}
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /etc/dns
      volumes:
        - name: {{ .Release.Name }}-config
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-config