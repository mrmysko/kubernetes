apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "romm" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: frontend
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.app.replicas | default 1 }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName | default "romm" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: frontend
    spec:
      initContainers:
        - name: init-chown
          image: busybox:1.36
          command: ["sh", "-c", "chown -R {{ .Values.app.uid }}:{{ .Values.app.gid }} /data"]
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: {{ .Release.Name }}-resources
              mountPath: /data
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.app.image.repo }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.network.port }}
          securityContext:
            runAsUser: {{ .Values.app.uid }}
            runAsGroup: {{ .Values.app.gid }}
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
            - secretRef:
                name: {{ .Release.Name }}-secret
          resources:
          {{- toYaml .Values.app.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /api/heartbeat
              port: {{ .Values.network.port }}
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /api/heartbeat
              port: {{ .Values.network.port }}
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - name: {{ .Release.Name }}-assets
              mountPath: /romm/assets
            - name: {{ .Release.Name }}-games
              mountPath: /romm/library
            - name: {{ .Release.Name }}-resources
              mountPath: /romm/resources
            - name: {{ .Release.Name }}-config
              mountPath: /romm/config
            - name: db-ca
              mountPath: {{ .Values.db.sslCa }}
              subPath: {{ .Values.db.sslCa | base }}
              readOnly: true
            - name: authelia-fullchain
              mountPath: {{ .Values.app.oidc.tlsCaCertFile }}
              subPath: {{ .Values.app.oidc.tlsCaCertFile | base }}
      volumes:
        - name: {{ .Release.Name }}-assets
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-assets
        - name: {{ .Release.Name }}-games
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-games
        - name: {{ .Release.Name }}-resources
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-resources
        - name: {{ .Release.Name }}-config
          emptyDir: {}
        - name: db-ca
          secret:
            secretName: db-{{ .Release.Name }}-server-cert
            items:
              - key: ca.crt
                path: ca.crt
        - name: authelia-fullchain
          configMap:
            name: authelia-fullchain
            items:
              - key: {{ .Values.app.oidc.tlsCaCertFile | base }}
                path: {{ .Values.app.oidc.tlsCaCertFile | base }}
      enableServiceLinks: false
