apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "romm" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: cache
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.redis.replicas | default 1 }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName | default "romm" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: cache
    spec:
      containers:
        - name: {{ .Release.Name }}-redis
          image: 11notes/redis:7.4.5
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "IfNotPresent" }}
          args: ["--in-memory"]
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: REDIS_PASSWORD
          ports:
            - containerPort: {{ .Values.redis.port }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          resources:
          {{- toYaml .Values.redis.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "romm" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: cache
  ports:
    - protocol: TCP
      port: {{ .Values.redis.port }}
      targetPort: {{ .Values.redis.port }}
  type: ClusterIP
