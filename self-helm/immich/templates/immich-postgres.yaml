apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-database
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "immich" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.db.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName | default "immich" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: database
    spec:
      containers:
        - name: {{ .Release.Name }}-postgres
          image: "{{ .Values.db.image.repo }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.db.port }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-env
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-env
                  key: DB_DATABASE_NAME
          resources:
          {{- toYaml .Values.db.resources | nindent 12 }}
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-db-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-db-pvc
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "immich" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
{{- if .Values.db.existingPvcName }}
  volumeName: {{ .Values.db.existingPvcName }}
{{- end }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-database
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "immich" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
  ports:
    - port: {{ .Values.db.port }}
      targetPort: {{ .Values.db.port }}
      protocol: TCP
