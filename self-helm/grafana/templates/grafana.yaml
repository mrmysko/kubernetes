# This requires the grafana-operator - https://github.com/grafana/grafana-operator
---
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "grafana" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    dashboards: grafana
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  config:
    global:
      app_mode: "development"
    log:
      mode: "console"
    server:
      root_url: https://{{ .Values.network.baseUrl }}
      enable_gzip: "true"
    database:
      url: "mysql://{{ .Values.db.user }}:${MYSQL_PASSWORD}@{{ .Values.db.host }}.{{ .Release.Namespace }}.svc:3306/{{ .Values.db.name }}"
      ca_cert_path: /tmp/certs/ca.crt
      client_cert_path: /tmp/certs/tls.crt
      client_key_path: /tmp/certs/tls.key
      server_cert_name: {{ .Values.db.host }}.{{ .Release.Namespace }}.svc.cluster.local
      ssl_mode: "true"
    auth:
      disable_login_form: "true"
    auth.generic_oauth:
      enabled: "true"
      name: OAuth
      icon: signin
      client_id: "${OIDC_CLIENT_ID}"
      # This is bad, find out how to fix it...
      client_secret: {{ .Values.app.oidc.clientSecret }}
      scopes: openid,email,profile,groups
      empty_scopes: "false"
      auth_url: https://{{ .Values.app.oidc.url }}/api/oidc/authorization
      token_url: https://{{ .Values.app.oidc.url }}/api/oidc/token
      api_url: https://{{ .Values.app.oidc.url }}/api/oidc/userinfo
      login_attribute_path: preferred_username
      groups_attribute_path: groups
      name_attribute_path: name
      use_pkce: "true"
      role_attribute_path: contains(groups[*], 'service-admins') && 'GrafanaAdmin'
      allow_assign_grafana_admin: "true"
      signout_redirect_url: https://{{ .Values.app.oidc.url }}/logout
      skip_org_role_sync: "false"
  deployment:
    spec:
      template:
        spec:
          containers:
            - name: grafana
              envFrom:
                - secretRef:
                    name: grafana-secret
              livenessProbe:
                  httpGet:
                    scheme: HTTP
                    path: /api/health
                    port: {{ .Values.network.port }}
                  initialDelaySeconds: 10
                  periodSeconds: 10
              readinessProbe:
                  httpGet:
                    scheme: HTTP
                    path: /api/health
                    port: {{ .Values.network.port }}
                  initialDelaySeconds: 10
                  periodSeconds: 10
              securityContext:
                runAsNonRoot: true
                allowPrivilegeEscalation: false
                capabilities:
                  drop: ["ALL"]
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - name: grafana-server-cert
                  mountPath: /tmp/certs
                  readOnly: true
          volumes:
            - name: grafana-server-cert
              secret:
                secretName: grafana-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-server-cert
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "grafana" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  secretName: grafana-server-cert
  issuerRef:
    name: cluster-ca
    kind: ClusterIssuer
  privateKey:
    rotationPolicy: Always
  commonName: grafana.{{ .Release.Namespace }}.svc.cluster.local
  dnsNames:
    - "grafana.{{ .Release.Namespace }}.svc.cluster.local"
    - "grafana.{{ .Release.Namespace }}.svc"
    - "grafana.{{ .Release.Namespace }}"
    - "grafana"
    - "localhost"
