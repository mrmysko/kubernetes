apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Values.appName | default "homepage" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: frontend
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.app.replicas | default 1 }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.appName | default "homepage" }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName | default "homepage" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: frontend
    spec:
      serviceAccountName: {{ .Release.Name }}
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: init-chown
          image: busybox:1.36
          command: ["sh", "-c", "chown -R {{ .Values.app.uid }}:{{ .Values.app.gid }} /data"]
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: {{ .Release.Name }}-persistence
              mountPath: /data
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.app.image.repo }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy | default "IfNotPresent" }}
          imagePullPolicy: Always
          env:
            - name: HOMEPAGE_ALLOWED_HOSTS
              value: {{ .Values.network.baseUrl }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secret
          ports:
            - name: http
              containerPort: {{ .Values.network.port }}
              protocol: TCP
          resources:
          {{- toYaml .Values.app.resources | nindent 12 }}
          securityContext:
            runAsUser: {{ .Values.app.uid }}
            runAsGroup: {{ .Values.app.gid }}
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /app/config/
            - name: logs
              mountPath: /app/config/logs
            - name: {{ .Release.Name }}-persistence
              mountPath: /app/public/images
      volumes:
        - name: {{ .Release.Name }}-persistence
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        - name: {{ .Release.Name }}-config
          configMap:
            name: {{ .Release.Name }}-config
        - name: logs
          emptyDir: {}
